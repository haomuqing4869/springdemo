<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- context 是逆向工程的主要配置信息 -->
    <!-- id： 名字而已  作为唯一标识 -->
    <!-- targetRuntime： 设置生成的文件使用于哪个 MyBatis 版本  -->
    <context id="default" targetRuntime="MyBatis3">

        <!--数据库连接的信息，包括驱动类名、连接URL、用户名和密码。-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/ssmtest"
                        userId="root"
                        password="12345">
        </jdbcConnection>

        <!--配置生成实体类的相关信息 pojo (entity) -->
        <!-- targetPackage： 目标包名，java目录下的包路径 -->
        <!-- targetProject： 目标路径，java包的相对路径 -->
        <!-- 生成 pojo (entity) 存放位置 -->
        <javaModelGenerator targetPackage="com.example.springdemo.mybatis.entity" targetProject="src/main/java">
            <!-- 是否允许子包 -->
            <property name="enableSubPackages" value="true" />
            <!-- 是否对modal添加构造函数 -->
            <property name="constructorBased" value="true" />
            <!-- 是否清理从数据库中查询出的字符串左右两边的空白字符 -->
            <property name="trimStrings" value="true" />
            <!-- 建立modal对象是否不可改变 即生成的modal对象不会有setter方法，只有构造方法 -->
            <property name="immutable" value="false" />
        </javaModelGenerator>

        <!-- 配置生成映射文件（Mapper XML）的相关信息，包括目标包名（targetPackage）和目标路径（targetProject）。 -->
        <!-- 生成映射文件存放位置 -->
        <sqlMapGenerator targetPackage="mapping.mybatis" targetProject="src/main/resources">
            <!-- 针对数据库的一个配置，是否把 schema 作为包名 -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 配置生成Dao接口的相关信息，包括目标包名（targetPackage）和目标路径（targetProject）。-->
        <!-- 生成Dao类存放位置，也就是生成mapper接口所在的位置 -->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.springdemo.mybatis.dao" targetProject="src/main/java">
            <!-- 针对 Oracle 数据库的一个配置，是否把 schema 作为包名 -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 配置需要生成实体类、映射文件和Dao接口的表信息，包括表名（tableName）和对应的实体类名（domainObjectName）-->
        <!-- 生成对应表及类名，这里每一个表的五项属性是为了删除自动编写的复杂查询 -->
        <!-- tableName: 对应的是数据库表名，domainObjectName： 是实体类的名字，可以自定义 -->
        <table tableName="food" domainObjectName="Food" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">
        </table>

        <table tableName="users" domainObjectName="User" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">
        </table>

    </context>
</generatorConfiguration>
